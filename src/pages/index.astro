---
import '../styles/global.css';
import { hero } from '../content/heroContent.js';
import { gallery } from '../content/galleryContent.js';
import { instagramPosts } from '../content/instagramContent.js';
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>OctoGon 3D Portfolio</title>
    <!-- Local AOS for scroll animations -->
    <link rel="stylesheet" href="/aos.css" />
  </head>
  <body class="bg-gray-900 text-white min-h-screen flex flex-col">
    <!-- Hero/Header Section (with About merged in) -->
    <header class="min-h-screen flex flex-col justify-center items-center bg-gray-800 relative" id="hero-section">
      <div id="business-card" class="bg-gray-900 rounded-2xl shadow-2xl flex flex-col md:flex-row items-center gap-8 px-8 py-10 max-w-2xl w-full border border-gray-700 z-0">
        <img src="./logo.jpg" alt="Logo" class="w-32 h-32 rounded-full object-cover border-4 border-blue-400 shadow-lg" />
        <div class="flex-1 flex flex-col items-center md:items-start text-center md:text-left">
          <h1 class="text-4xl font-extrabold mb-2 tracking-tight">{hero.name}</h1>
          <p class="text-blue-400 text-lg mb-4 font-semibold">{hero.tagline}</p>
          <div class="flex gap-4 mb-4">
            {hero.links.map(link => (
              <a href={link.href} class={link.class}>{link.label}</a>
            ))}
          </div>
          <div class="text-gray-300 text-sm">
            {hero.about}<br />
            {hero.follow}
          </div>
        </div>
      </div>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js" is:inline></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js" is:inline></script>
      <script is:inline>
        window.addEventListener('load', function () {
          const businessCard = document.getElementById('business-card');
          const heroSection = document.getElementById('hero-section');
          const gallerySection = document.querySelector('.gallery-section');
          if (window.gsap && window.ScrollTrigger && businessCard && heroSection && gallerySection) {
            gsap.registerPlugin(ScrollTrigger);
            ScrollTrigger.create({
              trigger: heroSection,
              start: 'top top',
              endTrigger: gallerySection,
              end: 'top top',
              pin: businessCard,
              pinSpacing: false,
              anticipatePin: 1,
            });
          }
        });
      </script>
    </header>

    <!-- Scroll Cue Chevron -->
    <div id="scroll-cue" class="scroll-cue">
      <svg id="chevron-svg" width="48" height="48" viewBox="0 0 48 48" fill="none">
        <g id="chevron-group">
          <path id="chevron" d="M16 20l8 8 8-8" stroke="#60a5fa" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
          <circle id="chevron-circle" cx="24" cy="24" r="20" stroke="#60a5fa" stroke-width="3" fill="none" style="opacity:0; transition: opacity 0.4s;"/>
        </g>
      </svg>
    </div>
    <style>
      .scroll-cue {
        position: absolute;
        left: 50%;
        bottom: 32px;
        transform: translateX(-50%);
        z-index: 50;
        cursor: pointer;
        transition: opacity 0.3s cubic-bezier(.4,2,.6,1);
        opacity: 0.85;
        pointer-events: auto;
      }
      .scroll-cue.bounce {
        animation: bounce-cue 2s infinite;
      }
      @keyframes bounce-cue {
        0%, 100% { transform: translateX(-50%) translateY(0); }
        50% { transform: translateX(-50%) translateY(12px); }
      }
             .scroll-cue svg {
         display: block;
       }
               .group:hover .gallery-overlay {
          background: linear-gradient(to top, rgba(0, 0, 0, 0.9) 0%, rgba(0, 0, 0, 0.9) 25%, transparent 100%) !important;
        }
        .gallery-overlay {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
        }
        .gallery-image {
          max-width: 100%;
          height: auto;
        }
    </style>
    <script is:inline>
      // Scroll cue logic (opacity based on scroll)
      document.addEventListener('DOMContentLoaded', function() {
        const scrollCue = document.getElementById('scroll-cue');
        const heroSection = document.getElementById('hero-section');
        function updateScrollCue() {
          const heroHeight = heroSection.offsetHeight;
          const scrollY = window.scrollY;
          // Calculate progress: 0 at top, 1 when hero is fully out of view
          let progress = 1 - (scrollY / heroHeight);
          progress = Math.max(0, Math.min(1, progress));
          const opacity = (0.85 * progress).toFixed(2);
          scrollCue.style.opacity = opacity;
          console.log('Scroll cue opacity:', opacity);
        }
        // Initial state
        scrollCue.classList.add('bounce');
        window.addEventListener('scroll', updateScrollCue);
        window.addEventListener('resize', updateScrollCue);
        setTimeout(updateScrollCue, 100);
        // Click to scroll
        scrollCue.addEventListener('click', function() {
          const gallerySection = document.getElementById('gallery-section');
          if (window.scrollY < heroSection.offsetHeight * 0.5) {
            // Scroll to next section (gallery)
            if (gallerySection) {
              gallerySection.scrollIntoView({ behavior: 'smooth' });
            }
          } else {
            window.scrollTo({ top: 0, behavior: 'smooth' });
          }
        });
      });
    </script>

    <!-- Gallery Section with Individual Item Pinning -->
    <section class="gallery-section z-0" id="gallery-section">
      {gallery.map((art, index) => (
        <>
          <div 
            class="min-h-screen flex flex-col justify-center items-center bg-gray-900 gallery-item" 
            id={`gallery-item-${index}`}
            data-index={index}
          >
            <div class="w-full max-w-4xl gallery-item-content flex justify-center items-center" style="z-index: ${(gallery.length - index) * 10}">
              <div class="relative">
                <div class="bg-transparent rounded-xl shadow-xl group cursor-pointer transition-transform duration-300 hover:scale-105 relative">
                  <div class="relative" style="display: inline-block;">
                    <img src={art.image} alt={art.title} class="object-contain gallery-image" style="display: block; max-width: calc(100vw - 4rem); max-height: calc(100vh - 8rem);" />
                    <div class="absolute inset-0 transition-all duration-300 flex items-end justify-center pointer-events-none gallery-overlay" style="background: transparent;">
                      <div class="text-white opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-center p-4 pointer-events-auto drop-shadow-2xl w-full h-full flex flex-col justify-end">
                        <h3 class="text-xl font-bold mb-2">{art.title}</h3>
                        <p class="text-sm text-gray-200">{art.description}</p>
                        <div class="flex flex-wrap gap-2 mt-3 justify-center">
                          {art.tags.map(tag => (
                            <span class="px-2 py-1 bg-blue-500 bg-opacity-50 rounded-full text-xs">{tag}</span>
                          ))}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="h-screen bg-gray-900"></div>
        </>
      ))}
      <div class="h-screen bg-gray-900"></div>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js" is:inline></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js" is:inline></script>
      <script is:inline>
        window.addEventListener('load', function () {
          if (window.gsap && window.ScrollTrigger) {
            gsap.registerPlugin(ScrollTrigger);
            
            // Hero pin effect (keep existing)
            const heroSection = document.getElementById('hero-section');
            const gallerySection = document.getElementById('gallery-section');
            if (heroSection && gallerySection) {
              ScrollTrigger.create({
                trigger: heroSection,
                start: 'top top',
                endTrigger: gallerySection,
                end: 'bottom top',
                pin: heroSection,
                pinSpacing: false,
                anticipatePin: 1,
              });
            }
            
            // Individual gallery item pinning with shrinking effect
            const galleryItems = document.querySelectorAll('.gallery-item');
            const tutorialsSection = document.getElementById('tutorials-section');
            
            console.log('Found gallery items:', galleryItems.length);
            
            // Individual gallery item pinning with proper transitions
            console.log('Found gallery items:', galleryItems.length);
            
            console.log('Setting up gallery items with proper z-index');
            
            // Pin all items and animate their visibility
            galleryItems.forEach((item, index) => {
              const itemContent = item.querySelector('.gallery-item-content');
              
              console.log(`Setting up item ${index}:`, item.id);
              
              // Pin each item for the entire gallery duration
              ScrollTrigger.create({
                trigger: item,
                start: 'top top',
                endTrigger: tutorialsSection,
                end: 'bottom top',
                pin: itemContent,
                pinSpacing: false,
                anticipatePin: 1,

              });
            });
          }
        });
      </script>
    </section>

    <!-- Tutorials Section (YouTube Shorts style, horizontal row, large tiles, GSAP ScrollTrigger) -->
    <section id="tutorials-section" class="min-h-screen flex flex-col justify-start items-center bg-gray-800 overflow-x-hidden relative z-10 pt-8">
      <h2 class="text-2xl font-bold mb-8 text-center">Tutorial Shorts</h2>
      <div id="shorts-row" class="w-screen flex justify-start items-center gap-8 overflow-x-visible">
        <div class="short-tile h-[80vh] aspect-[9/16] bg-gray-900 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Short 1</div>
        <div class="short-tile h-[80vh] aspect-[9/16] bg-gray-900 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Short 2</div>
        <div class="short-tile h-[80vh] aspect-[9/16] bg-gray-900 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Short 3</div>
        <div class="short-tile h-[80vh] aspect-[9/16] bg-gray-900 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Short 4</div>
        <div class="short-tile h-[80vh] aspect-[9/16] bg-gray-900 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Short 5</div>
      </div>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js" is:inline></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js" is:inline></script>
      <script is:inline>
        window.addEventListener('load', function () {
          const row = document.getElementById('shorts-row');
          const section = document.getElementById('tutorials-section');
          const tiles = document.querySelectorAll('.short-tile');
          const numTiles = tiles.length;
          let totalWidth = 0;
          let scrollDistance = 0;
          if (numTiles > 0) {
            const tileWidth = tiles[0].offsetWidth;
            const gap = parseInt(getComputedStyle(tiles[0].parentElement).gap) || 0;
            totalWidth = numTiles * tileWidth + (numTiles - 1) * gap;
            const container = tiles[0].parentElement;
            const visibleWidth = container.offsetWidth;
            scrollDistance = totalWidth - visibleWidth;
          }
          console.log('Number of Shorts tiles:', numTiles);
          console.log('Total width of tiles plus gaps:', totalWidth, 'px');
          console.log('Scroll distance:', scrollDistance, 'px');
          if (section) {
            console.log('Section height:', section.offsetHeight, 'px');
          }
          if (row) {
            console.log('Row width:', row.offsetWidth, 'px');
          }
          if (window.gsap && window.ScrollTrigger && row && section && totalWidth > 0) {
            gsap.registerPlugin(ScrollTrigger);
            gsap.to(row, {
              x: -totalWidth,
              ease: 'none',
              scrollTrigger: {
                trigger: section,
                start: 'top top',
                end: `+=${totalWidth}`,
                pin: true,
                scrub: 1,
                anticipatePin: 1,
              },
            });
          }
          // Duplicate all tiles and append them to the row for visual padding
          if (row && numTiles > 0) {
            for (let i = 0; i < numTiles; i++) {
              const clone = tiles[i].cloneNode(true);
              row.appendChild(clone);
            }
          }
          const extraSpacer = document.getElementById('tutorials-extra-spacer');
          if (extraSpacer && totalWidth > 0) {
            extraSpacer.style.height = `${totalWidth}px`;
          }
        });
      </script>
    </section>
    <section id="tutorials-extra-spacer"></section>

    <!-- Instagram Section (scrolling in opposite direction) -->
    <section id="instagram-section" class="min-h-screen flex flex-col justify-start items-center bg-gray-900 overflow-x-hidden relative z-10 pt-8">
      <h2 class="text-2xl font-bold mb-8 text-center">Instagram Feed</h2>
      <div id="instagram-row" class="w-screen flex justify-end items-center gap-8 overflow-x-visible">
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 1</div>
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 2</div>
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 3</div>
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 4</div>
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 5</div>
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 6</div>
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 7</div>
        <div class="instagram-tile h-[80vh] aspect-square bg-gray-800 rounded-xl shadow-2xl flex items-center justify-center text-pink-400 text-lg font-bold">Post 8</div>
      </div>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js" is:inline></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js" is:inline></script>
      <script is:inline>
        window.addEventListener('load', function () {
          const row = document.getElementById('instagram-row');
          const section = document.getElementById('instagram-section');
          const tiles = document.querySelectorAll('.instagram-tile');
          const numTiles = tiles.length;
          let totalWidth = 0;
          let scrollDistance = 0;
          if (numTiles > 0) {
            const tileWidth = tiles[0].offsetWidth;
            const gap = parseInt(getComputedStyle(tiles[0].parentElement).gap) || 0;
            totalWidth = numTiles * tileWidth + (numTiles - 1) * gap;
            const container = tiles[0].parentElement;
            const visibleWidth = container.offsetWidth;
            scrollDistance = totalWidth - visibleWidth;
          }
          console.log('Number of Instagram tiles:', numTiles);
          console.log('Total width of tiles plus gaps:', totalWidth, 'px');
          console.log('Scroll distance:', scrollDistance, 'px');
          if (section) {
            console.log('Section height:', section.offsetHeight, 'px');
          }
          if (row) {
            console.log('Row width:', row.offsetWidth, 'px');
          }
          if (window.gsap && window.ScrollTrigger && row && section && totalWidth > 0) {
            gsap.registerPlugin(ScrollTrigger);
            gsap.to(row, {
              x: totalWidth, // Positive value for opposite direction
              ease: 'none',
              scrollTrigger: {
                trigger: section,
                start: 'top top',
                end: `+=${totalWidth}`,
                pin: true,
                scrub: 1,
                anticipatePin: 1,
              },
            });
          }
          // Duplicate all tiles and append them to the row for visual padding
          if (row && numTiles > 0) {
            for (let i = 0; i < numTiles; i++) {
              const clone = tiles[i].cloneNode(true);
              row.appendChild(clone);
            }
          }
          const extraSpacer = document.getElementById('instagram-extra-spacer');
          if (extraSpacer && totalWidth > 0) {
            extraSpacer.style.height = `${totalWidth}px`;
          }
        });
      </script>
    </section>
    <section id="instagram-extra-spacer"></section>

    <!-- Shop Section -->
    <section id="shop-section" class="min-h-screen flex flex-col justify-center items-center bg-gray-800 relative z-10">
      <div id="shop-card" class="max-w-xl mx-auto text-center relative z-0">
        <h2 class="text-2xl font-bold mb-4">Shop Wallpapers</h2>
        <a href="#" class="px-8 py-3 rounded-full bg-pink-400 text-gray-900 font-semibold text-lg shadow-lg hover:bg-pink-500 transition">Shop on Gumroad</a>
      </div>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js" is:inline></script>
      <script src="https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/ScrollTrigger.min.js" is:inline></script>
      <script is:inline>
        window.addEventListener('load', function () {
          const shopCard = document.getElementById('shop-card');
          const shopSection = document.getElementById('shop-section');
          const footer = document.querySelector('footer');
          if (window.gsap && window.ScrollTrigger && shopCard && shopSection && footer) {
            gsap.registerPlugin(ScrollTrigger);
            ScrollTrigger.create({
              trigger: shopSection,
              start: 'top top',
              endTrigger: footer,
              end: 'top top',
              pin: shopCard,
              pinSpacing: false,
              anticipatePin: 1,
            });
          }
        });
      </script>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-950 py-12 mt-auto relative z-50">
      <div class="max-w-6xl mx-auto px-6">
        <div class="grid md:grid-cols-4 gap-8 mb-8">
          <div>
            <h3 class="text-xl font-bold mb-4">OctoGon 3D</h3>
            <p class="text-gray-300 text-sm">Creating mesmerizing digital art and sharing knowledge with the 3D community.</p>
          </div>
          <div>
            <h4 class="font-bold mb-4">Quick Links</h4>
            <ul class="space-y-2 text-sm text-gray-300">
              <li><a href="#" class="hover:text-blue-400 transition-colors">Gallery</a></li>
              <li><a href="#" class="hover:text-blue-400 transition-colors">Tutorials</a></li>
              <li><a href="#" class="hover:text-blue-400 transition-colors">Shop</a></li>
              <li><a href="#" class="hover:text-blue-400 transition-colors">About</a></li>
            </ul>
          </div>
          <div>
            <h4 class="font-bold mb-4">Connect</h4>
            <ul class="space-y-2 text-sm text-gray-300">
              <li><a href="https://youtube.com/@octogon3d" class="hover:text-red-400 transition-colors">YouTube</a></li>
              <li><a href="https://instagram.com/octogon3d" class="hover:text-pink-400 transition-colors">Instagram</a></li>
              <li><a href="https://gumroad.com/octogon3d" class="hover:text-green-400 transition-colors">Gumroad</a></li>
              <li><a href="mailto:hello@octogon3d.com" class="hover:text-yellow-400 transition-colors">Email</a></li>
            </ul>
          </div>
          <div>
            <h4 class="font-bold mb-4">Contact Me</h4>
            <p class="text-gray-300 text-sm mb-4">Interested in collaboration or have questions? Let's talk!</p>
            <a href="mailto:hello@octogon3d.com" class="inline-flex items-center gap-2 px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"/>
                <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"/>
              </svg>
              Send Email
            </a>
          </div>
        </div>
        <div class="border-t border-gray-700 pt-8 text-center">
          <div class="flex justify-center gap-4 mb-4">
            <a href="https://youtube.com/@octogon3d" class="hover:text-red-400 transition-colors">YouTube</a>
            <a href="https://instagram.com/octogon3d" class="hover:text-pink-400 transition-colors">Instagram</a>
            <a href="https://gumroad.com/octogon3d" class="hover:text-green-400 transition-colors">Gumroad</a>
          </div>
          <div class="text-gray-400 text-sm">© 2024 OctoGon 3D. All rights reserved.</div>
        </div>
      </div>
    </footer>
    <script src="/aos.js" is:inline></script>
    <script>
      setTimeout(function () {
        if ((window as any).AOS) {
          (window as any).AOS.init();
        } else {
          console.error('AOS not found on window');
        }
      }, 100);
    </script>
  </body>
</html>
